name: CI/CD Pipeline - Second-hand EV And Battery Trading Platform

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '22'
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  # ---------- Backend Build & Test ----------
  backend-build-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Dependencies (Backend)
      run: |
        cd BackEnd
        dotnet restore

    - name: Build Backend
      run: |
        cd BackEnd
        dotnet build --no-restore --configuration Release

    - name: Run Backend Tests
      run: |
        cd BackEnd
        if dotnet test --list-tests > /dev/null 2>&1; then
          dotnet test --no-build --configuration Release --verbosity normal
        else
          echo "No test projects found, skipping tests"
        fi

    - name: Publish Backend
      run: |
        cd BackEnd
        dotnet publish --no-build --configuration Release --output ../publish

    - name: Archive Backend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-artifacts
        path: publish/
        retention-days: 14

  # ---------- Frontend Build & Test ----------
  frontend-build-test:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'FrontEnd/package-lock.json'

    - name: Install Frontend Dependencies
      run: |
        cd FrontEnd
        npm ci

    - name: Lint Frontend Code
      run: |
        cd FrontEnd
        npm run lint || true

    - name: Build Frontend
      run: |
        cd FrontEnd
        npm run build

    - name: Archive Frontend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifacts
        path: FrontEnd/dist/
        retention-days: 14

  # ---------- Security Scan ----------
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend-build-test]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Run Security Scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_CSHARP: true
        VALIDATE_JAVASCRIPT_ES: true

  # ---------- Deploy Backend (Docker Hub) ----------
  deploy-backend:
    name: Deploy Backend (Docker Hub)
    runs-on: ubuntu-latest
    needs: [backend-build-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Build & Push Backend Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./BackEnd
        file: ./BackEnd/Dockerfile
        push: true
        tags: tak1stprogrammer/backend:latest

  # ---------- Cleanup Old Artifacts ----------
  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Cleanup Old Artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          const oldArtifacts = artifacts.data.artifacts.filter(artifact => {
            const createdAt = new Date(artifact.created_at);
            const daysOld = (Date.now() - createdAt) / (1000 * 60 * 60 * 24);
            return daysOld > 7;
          });

          for (const artifact of oldArtifacts) {
            await github.rest.actions.deleteArtifact({
